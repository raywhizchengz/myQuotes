{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/elapsed-time.pipe.ts","webpack:///src/app/highlight.directive.ts","webpack:///src/app/quotes-dashboard/quotes-dashboard.component.ts","webpack:///src/app/quotes-dashboard/quotes-dashboard.component.html","webpack:///src/app/quotes-form/quotes-form.component.ts","webpack:///src/app/quotes-form/quotes-form.component.html","webpack:///src/app/quotes.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","redirectTo","pathMatch","AppModule","enableTracing","declarations","providers","bootstrap","ElapsedTimePipe","value","now","Date","elapsedSeconds","Math","abs","elapsedDays","floor","name","HighlightDirective","el","nativeElement","style","color","QuotesDashboardComponent","quotes","likeQuote","dislikeQuote","index","showQuote","deleteThis","confirm","splice","upVote","downVote","arr","i","n","length","count","previous","newCount","max","apply","retrievedData","localStorage","getItem","addQuote","JSON","parse","push","QuotesFormComponent","newQuote","setItem","stringify","submitForm","Quotes","userName","quoteTitle","quoteAuthor","quote","date","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;QAOaM,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,iBAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,0P;AAAA;AAAA;ACNzB;;AAKA;;AACE;;AACE;;AAEA;;AACA;;AAAmB;;AAAW;;AAC9B;;AAGA;;AACE;;AACE;;AAKE;;AACF;;AACF;;AACA;;AACE;;AAKE;;AACF;;AACF;;AACF;;AACA;;AACF;;AAGA;;AACE;;AACF;;AAEF;;;;AAhCuB;;AAAA;;AAQb;;AAAA;;AASA;;AAAA;;;;;;;;;sEDrBGA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sC,CAYA;;;AACA,QAAMC,SAAS,GAAW,CACxB;AAAEC,UAAI,EAAE,cAAR;AAAwBC,eAAS,EAAE;AAAnC,KADwB,EAExB;AAAED,UAAI,EAAE,WAAR;AAAqBC,eAAS,EAAE;AAAhC,KAFwB,EAGxB;AAAED,UAAI,EAAE,EAAR;AAAYE,gBAAU,EAAE,YAAxB;AAAsCC,eAAS,EAAE;AAAjD,KAHwB,CAA1B;;QAyBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBATJ,CACP,uEADO,EAEP,oEAFO,EAGP,6DAAaZ,OAAb,CACAO,SADA,EAEA;AAAEM,qBAAa,EAAE;AAAjB,OAFA,CAEwB;AAFxB,OAHO,EAOP,0DAPO,CASI;;;;0HAGFD,S,EAAS;AAAA,uBAjBlB,2DAiBkB,EAhBlB,qGAgBkB,EAfjB,sFAeiB,EAdhB,uEAcgB,EAbf,kEAae;AAbA,kBAElB,uEAFkB,EAGlB,oEAHkB,EAGF,4DAHE,EAQlB,0DARkB;AAaA,O;AALP,K;;;;;sEAKFA,S,EAAS;cAnBrB,sDAmBqB;eAnBZ;AACRE,sBAAY,EAAE,CACZ,2DADY,EAEZ,qGAFY,EAGX,sFAHW,EAIV,uEAJU,EAKT,kEALS,CADN;AAORb,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,6DAAaD,OAAb,CACAO,SADA,EAEA;AAAEM,yBAAa,EAAE;AAAjB,WAFA,CAEwB;AAFxB,WAHO,EAOP,0DAPO,CAPD;AAgBRE,mBAAS,EAAE,EAhBH;AAiBRC,mBAAS,EAAE,CAAC,2DAAD;AAjBH,S;AAmBY,Q;;;;;;;;;;;;;;;;;;ACtCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,e;;;;;;;AACX;kCACUC,K,EAAU;AAClB,cAAIC,GAAG,GAAQC,IAAI,CAACD,GAAL,EAAf;AACA,cAAIE,cAAc,GAAWC,IAAI,CAACC,GAAL,CAASL,KAAK,GAAGC,GAAjB,IAAwB,IAArD;AAEA,cAAIK,WAAW,GAAWF,IAAI,CAACG,KAAL,CAAWJ,cAAc,GAAG,KAA5B,CAA1B;;AAEA,cAAIG,WAAJ,EAAiB;AACf,6BAAUA,WAAV;AACD,WAFD,MAEO;AACL,mBAAO,OAAP;AACD;AACF;;;;;;;uBAbUP,e;AAAe,K;;;;YAAfA,e;AAAe;;;;;sEAAfA,e,EAAe;cAH3B,kDAG2B;eAHtB;AACJS,cAAI,EAAE;AADF,S;AAGsB,Q;;;;;;;;;;;;;;;;;;ACL5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,kB,GAGX,4BAAYC,EAAZ,EAA4B;AAAA;;AAC1BA,QAAE,CAACC,aAAH,CAAiBC,KAAjB,CAAuBC,KAAvB,GAA+B,OAA/B;AACD,K;;;uBALUJ,kB,EAAkB,yH;AAAA,K;;;YAAlBA,kB;AAAkB,2C;AAAA;AAAA;AAAA;;;;;sEAAlBA,kB,EAAkB;cAH9B,uDAG8B;eAHpB;AACTvB,kBAAQ,EAAE;AADD,S;AAGoB,Q;;;;;;gBAC5B;;;;;;;;;;;;;;;;;;;;ACPH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqCM;;AACE;;AACE;;AACF;;AACA;;AACA;;AAA0B;;AAAqC;;AAC/D;;AAA0B;;AAA+B;;AAC3D;;;;;;AALI;;AAAA;;AAGwB;;AAAA;;AACA;;AAAA;;;;;;;;AAnChC;;AACE;;AACE;;AACE;;AAEE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAO;;AAAO;;AAAmB;;AACnC;;AACA;;AAEE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACA;;AAAwB;;AAAsB;;AAC9C;;AAEE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACA;;AAEE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAO;;AAAqB;;AACxC;;AACF;;AACA;;AAQF;;AACA;;AACA;;AACE;;;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;AAtCsB;;AAAA;;AAQQ;;AAAA;;AAWL;;AAAA;;AAGiB;;AAAA;;AAWtC;;AAAA;;;;QDxCO4B,wB;AALb;AAAA;;AAME;AACA,aAAAC,MAAA,GAAmB,CACjB,IAAI,8CAAJ,CACE,CADF,EAEE,CAFF,EAGE,KAHF,EAIE,cAJF,EAKE,UALF,EAME,0DANF,EAOE,IAAIb,IAAJ,CAAS,CAAT,EAAY,EAAZ,EAAgB,IAAhB,CAPF,CADiB,EAUjB,IAAI,8CAAJ,CACE,CADF,EAEE,CAFF,EAGE,gBAHF,EAIE,UAJF,EAKE,aALF,EAME,4FANF,EAOE,IAAIA,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,IAAf,CAPF,CAViB,EAmBjB,IAAI,8CAAJ,CACE,CADF,EAEE,CAFF,EAGE,aAHF,EAIE,KAJF,EAKE,SALF,EAME,2CANF,EAOE,IAAIA,IAAJ,CAAS,CAAT,EAAY,EAAZ,EAAgB,IAAhB,CAPF,CAnBiB,EA4BjB,IAAI,8CAAJ,CACE,CADF,EAEE,CAFF,EAGE,aAHF,EAIE,QAJF,EAKE,WALF,EAME,wDANF,EAOE,IAAIA,IAAJ,EAPF,CA5BiB,CAAnB,CAPF,CA4DE;;AACO,aAAAc,SAAA,GAAqB,IAArB;AAQA,aAAAC,YAAA,GAAwB,IAAxB;AAgCR,O,CAvDC;;;;;oCACYC,K,EAAO;AACjB,eAAKH,MAAL,CAAYG,KAAZ,EAAmBC,SAAnB,GAA+B,CAAC,KAAKJ,MAAL,CAAYG,KAAZ,EAAmBC,SAAnD;AACD,S,CAED;;;;oCACYD,K,EAAO;AACjB,cAAIE,UAAU,GAAGC,OAAO,CAAC,yCAAD,CAAxB;;AAEA,cAAID,UAAJ,EAAgB;AACd,iBAAKL,MAAL,CAAYO,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B;AACD;AACF;;;6BAKIA,K,EAAO;AACV,cAAI,KAAKF,SAAT,EAAoB;AAClB,iBAAKD,MAAL,CAAYG,KAAZ,EAAmBK,MAAnB,IAA6B,CAA7B;AACD;AACF;;;gCAIOL,K,EAAO;AACb,cAAI,KAAKD,YAAT,EAAuB;AACrB,iBAAKF,MAAL,CAAYG,KAAZ,EAAmBM,QAAnB,IAA+B,CAA/B;AACD;AACF,S,CAED;;;;yCACiBC,G,EAAKP,K,EAAO;AAC3B,cAAIQ,CAAC,GAAG,CAAR;AAAA,cACEC,CAAC,GAAGF,GAAG,CAACG,MADV;AAGA,cAAIC,KAAK,GAAI,KAAKd,MAAL,CAAYG,KAAZ,EAAmBK,MAAnB,IAA6B,CAA1C;AACA,cAAIO,QAAQ,GAAG,KAAKf,MAAL,CAAYG,KAAZ,EAAmBK,MAAlC;;AAEA,iBAAOG,CAAC,IAAIC,CAAZ,EAAe,EAAED,CAAjB,EAAoB;AAClB,gBAAIK,QAAQ,GAAG3B,IAAI,CAAC4B,GAAL,CAASC,KAAT,CAAe7B,IAAf,EAAqByB,KAArB,CAAf;;AAEA,gBAAIC,QAAQ,IAAIC,QAAhB,EAA0B;AACxB,qBAAOA,QAAP;AACD;AACF;AACF;;;mCAEU;AACT;AACA,cAAIG,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAApB;AACA,cAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,aAAX,CAAf;AAEA,eAAKnB,MAAL,CAAYyB,IAAZ,CAAiBH,QAAjB;AACD;;;;;;;uBA/FUvB,wB;AAAwB,K;;;YAAxBA,wB;AAAwB,2C;AAAA,c;AAAA,a;AAAA,osB;AAAA;AAAA;ACPrC;;AAMA;;AACE;;AA8CF;;;;AA9CO;;AAAA;;;;;;;;;;sEDAMA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACT5B,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;AERrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaqD,mB;AALb;AAAA;;AAME,aAAAC,QAAA,GAAW,IAAI,8CAAJ,CAAW,CAAX,EAAc,CAAd,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,IAAIxC,IAAJ,EAAjC,CAAX;AAEU,aAAAmC,QAAA,GAAW,IAAI,0DAAJ,EAAX;AAQX;;;;qCANc;AACX;AACAF,sBAAY,CAACQ,OAAb,CAAqB,mBAArB,EAA0CL,IAAI,CAACM,SAAL,CAAe,KAAKF,QAApB,CAA1C;AACD;;;mCAEU,CAAE;;;;;;;uBAVFD,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,yoC;AAAA;AAAA;ACPhC;;AAGA;;AACE;;AACE;;AAA2B;AAAA,mBAAY,IAAAI,UAAA,EAAZ;AAAwB,WAAxB;;AAEzB;;AACE;;AACE;AAAA;AAAA;;AADF;;AAUF;;AAEA;;AACE;;AACE;AAAA;AAAA;;AADF;;AAUF;;AAEA;;AACE;;AACE;AAAA;AAAA;;AADF;;AAUF;;AAEA;;AACE;;AACE;AAAA;AAAA;;AASD;;AACH;;AAEA;;AACE;;AACE;AAAA;AAAA;;AADF;;AAUF;;AACA;;AAEA;;AACE;;AAA2D;;AAAI;;AACjE;;AACF;;AACF;;AACF;;;;AAtEU;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAcA;;AAAA;;;;;;;;;sEDvDGJ,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTvD,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;gBAG7B;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;;QAAa0D,M,GAIX,kBAOmB;AAAA,UANVvB,MAMU,uEANO,CAMP;AAAA,UALVC,QAKU,uEALS,CAKT;AAAA,UAJVuB,QAIU;AAAA,UAHVC,UAGU;AAAA,UAFVC,WAEU;AAAA,UADVC,KACU;AAAA,UAAVC,IAAU;;AAAA;;AANV,WAAA5B,MAAA,GAAAA,MAAA;AACA,WAAAC,QAAA,GAAAA,QAAA;AACA,WAAAuB,QAAA,GAAAA,QAAA;AACA,WAAAC,UAAA,GAAAA,UAAA;AACA,WAAAC,WAAA,GAAAA,WAAA;AACA,WAAAC,KAAA,GAAAA,KAAA;AACA,WAAAC,IAAA,GAAAA,IAAA;AAEP,WAAKhC,SAAL,GAAiB,KAAjB;AACD,K;;;;;;;;;;;;;;;;;ACdH;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMiC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  title = \"Rate The Quotes\";\n}\n","<!-- DOM element styling -->\n<link rel=\"stylesheet\" href=\"/src/app/app.component.css\" />\n\n<!-- HTML DOM structure -->\n\n<!-- app container -->\n<div>\n  <div class=\"custom-bg\">\n    <hr />\n    <!-- header section -->\n    <hr />\n    <h1 class=\"header\">{{ title }}</h1>\n    <hr />\n\n    <!-- navigation -->\n    <div class=\"nav-buttons\">\n      <div>\n        <button\n          class=\"btn btn-dark\"\n          [routerLink]=\"['/write-quotes']\"\n          routerLinkActive=\"router-link-active\"\n        >\n          write Quote\n        </button>\n      </div>\n      <div>\n        <button\n          class=\"btn btn-dark\"\n          [routerLink]=\"['/dashboard']\"\n          routerLinkActive=\"router-link-active\"\n        >\n          Dashboard\n        </button>\n      </div>\n    </div>\n    <hr />\n  </div>\n\n  <!-- content -->\n  <div class=\"app-content container-fluid\">\n    <router-outlet></router-outlet>\n  </div>\n  <!-- end of webpage -->\n</div>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { QuotesDashboardComponent } from \"./quotes-dashboard/quotes-dashboard.component\";\nimport { QuotesFormComponent } from \"./quotes-form/quotes-form.component\";\nimport { HighlightDirective } from './highlight.directive';\nimport { ElapsedTimePipe } from './elapsed-time.pipe';\n\n//registering routes\nconst appRoutes: Routes = [\n  { path: \"write-quotes\", component: QuotesFormComponent },\n  { path: \"dashboard\", component: QuotesDashboardComponent },\n  { path: \"\", redirectTo: \"/dashboard\", pathMatch: \"full\" }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuotesDashboardComponent,\n     QuotesFormComponent,\n      HighlightDirective,\n       ElapsedTimePipe],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(\n    appRoutes,\n    { enableTracing: true } // <-- debugging purposes only\n    ),\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"elapsedTime\"\n})\nexport class ElapsedTimePipe implements PipeTransform {\n  //custom pipe\n  transform(value: any): any {\n    let now: any = Date.now();\n    let elapsedSeconds: number = Math.abs(value - now) / 1000;\n\n    let elapsedDays: number = Math.floor(elapsedSeconds / 86400);\n\n    if (elapsedDays) {\n      return `${elapsedDays} days ago`;\n    } else {\n      return \"Today\";\n    }\n  }\n}\n","import { Directive, Input, ElementRef } from \"@angular/core\";\nimport { Quotes } from \"./quotes\";\n\n@Directive({\n  selector: \"[appHighlight]\"\n})\nexport class HighlightDirective {\n  @Input() quote: Quotes;\n\n  constructor(el: ElementRef) {\n    el.nativeElement.style.color = \"Green\";\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Quotes } from \"../quotes\";\n\n@Component({\n  selector: \"app-quotes-dashboard\",\n  templateUrl: \"./quotes-dashboard.component.html\",\n  styleUrls: [\"./quotes-dashboard.component.css\"]\n})\nexport class QuotesDashboardComponent implements OnInit {\n  //creating an object and initializing it\n  quotes: Quotes[] = [\n    new Quotes(\n      0,\n      0,\n      \"Ray\",\n      \"Trojan Horse\",\n      \"einstein\",\n      \"Made a large contribution in the field of chromatography\",\n      new Date(2, 25, 1992)\n    ),\n    new Quotes(\n      0,\n      0,\n      \"Pio Gama Pinto\",\n      \"Platypus\",\n      \"Boyle's Law\",\n      \"In the field of physics, he commented on Boyle's law and its importance to the human world\",\n      new Date(3, 6, 2003)\n    ),\n    new Quotes(\n      0,\n      0,\n      \"Roddy Ricch\",\n      \"ATL\",\n      \"the box\",\n      \"contributed largely in the music industry\",\n      new Date(4, 10, 2010)\n    ),\n    new Quotes(\n      0,\n      0,\n      \"Chris Adams\",\n      \"chanel\",\n      \"Unplugged\",\n      \"he added changes in the perfuming and fragrance sector\",\n      new Date()\n    )\n  ];\n\n  //showing and hiding quotes\n  toggleQuote(index) {\n    this.quotes[index].showQuote = !this.quotes[index].showQuote;\n  }\n\n  //deleting the quotes\n  deleteQuote(index) {\n    let deleteThis = confirm(\"Are you sure you want to delete quote: \");\n\n    if (deleteThis) {\n      this.quotes.splice(index, 1);\n    }\n  }\n\n  //voting for the quotes\n  public likeQuote: boolean = true;\n\n  like(index) {\n    if (this.likeQuote) {\n      this.quotes[index].upVote += 1;\n    }\n  }\n\n  public dislikeQuote: boolean = true;\n\n  dislike(index) {\n    if (this.dislikeQuote) {\n      this.quotes[index].downVote += 1;\n    }\n  }\n\n  //find quote with the largest quote\n  biggestNoInArray(arr, index) {\n    var i = 0,\n      n = arr.length;\n\n    let count = (this.quotes[index].upVote += 1);\n    let previous = this.quotes[index].upVote;\n\n    for (; i != n; ++i) {\n      let newCount = Math.max.apply(Math, count);\n\n      if (previous == newCount) {\n        return newCount;\n      }\n    }\n  }\n\n  ngOnInit() {\n    //read values from local storage and add to list\n    let retrievedData = localStorage.getItem(\"quotesFromTheUser\");\n    let addQuote = JSON.parse(retrievedData);\n\n    this.quotes.push(addQuote);\n  }\n}\n","<!-- DOM element styling -->\n<link\n  rel=\"stylesheet\"\n  href=\"/src/app/quotes-dashboard/quotes-dashboard.component.css\"\n/>\n\n<!-- HTML DOM structure -->\n<div class=\"container\">\n  <div *ngFor=\"let quote of quotes; let i = index\">\n    <div class=\"card bg-custom card-arrange\">\n      <div class=\"arrange\">\n        <button\n          class=\"top-card btn btn-outline-success btn-sm\"\n          (click)=\"like(i)\"\n        >\n          likes: <span> {{ quote.upVote }} </span>\n        </button>\n        <button\n          class=\"top-card btn btn-outline-primary btn-sm\"\n          (click)=\"toggleQuote(i)\"\n        >\n          Toggle Quote\n        </button>\n        <h3 class=\"quote-title\">{{ quote.quoteTitle }}</h3>\n        <button\n          class=\"top-card btn btn-outline-warning btn-sm\"\n          (click)=\"deleteQuote(i)\"\n        >\n          Delete Quote\n        </button>\n        <button\n          class=\"top-card btn btn-outline-danger btn-sm\"\n          (click)=\"dislike(i)\"\n        >\n          dislikes: <span> {{ quote.downVote }} </span>\n        </button>\n      </div>\n      <div class=\"card-body bg-custom-body\" *ngIf=\"quote.showQuote\">\n        <p class=\"center-content\">\n          {{ quote.quote }}\n        </p>\n        <hr />\n        <p class=\"center-content\">Quote author: {{ quote.quoteAuthor }}</p>\n        <p class=\"center-content\">Posted by: {{ quote.userName }}</p>\n      </div>\n    </div>\n    <hr />\n    <p class=\"center-content date-element\">\n      ~~| Posted: {{ quote.date | elapsedTime }} |~~\n    </p>\n    <p class=\"center-content date-element\" appHighlight>\n      ~~| most likes |~~\n    </p>\n  </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\nimport { Quotes } from \"../quotes\";\n\n@Component({\n  selector: \"app-quotes-form\",\n  templateUrl: \"./quotes-form.component.html\",\n  styleUrls: [\"./quotes-form.component.css\"]\n})\nexport class QuotesFormComponent implements OnInit {\n  newQuote = new Quotes(0, 0, \"\", \"\", \"\", \"\", new Date());\n\n  @Output() addQuote = new EventEmitter<Quotes>();\n\n  submitForm() {\n    //storing the user data to the local storage\n    localStorage.setItem(\"quotesFromTheUser\", JSON.stringify(this.newQuote));\n  }\n\n  ngOnInit() {}\n}\n","<!-- DOM element styling -->\n<link rel=\"stylesheet\" href=\"/src/app/quotes-form/quotes-form.component.css\" />\n\n<!-- HTM DOM structure -->\n<div class=\"container\">\n  <div class=\"jumbotron container-arrange\">\n    <form #quotesForm=\"ngForm\" (ngSubmit)=\"submitForm()\">\n      <!-- username -->\n      <div class=\"form-group\">\n        <input\n          [(ngModel)]=\"newQuote.userName\"\n          #username=\"ngModel\"\n          required\n          type=\"text\"\n          name=\"username\"\n          id=\"username\"\n          class=\"form-control\"\n          placeholder=\"Your name...\"\n        />\n      </div>\n      <!-- quote title -->\n      <div class=\"form-group\">\n        <input\n          [(ngModel)]=\"newQuote.quoteTitle\"\n          #quotename=\"ngModel\"\n          type=\"text\"\n          name=\"quotename\"\n          id=\"quotename\"\n          class=\"form-control\"\n          required\n          placeholder=\"Quote Title...\"\n        />\n      </div>\n      <!-- quote author -->\n      <div class=\"form-group\">\n        <input\n          [(ngModel)]=\"newQuote.quoteAuthor\"\n          #quoteauthor=\"ngModel\"\n          type=\"text\"\n          name=\"quoteauthor\"\n          id=\"quoteauthor\"\n          class=\"form-control\"\n          required\n          placeholder=\"Quote Author...\"\n        />\n      </div>\n      <!-- actual quote -->\n      <div class=\"form-group\">\n        <textarea\n          [(ngModel)]=\"newQuote.quote\"\n          #quote=\"ngModel\"\n          name=\"quote\"\n          id=\"quote\"\n          class=\"form-control\"\n          cols=\"30\"\n          rows=\"10\"\n          required\n          placeholder=\"Quote\"\n        ></textarea>\n      </div>\n      <!-- date -->\n      <div class=\"form-group\">\n        <input\n          [(ngModel)]=\"newQuote.date\"\n          #date=\"ngModel\"\n          required\n          type=\"date\"\n          name=\"date\"\n          id=\"date\"\n          class=\"form-control\"\n          placeholder=\"Date...\"\n        />\n      </div>\n      <hr />\n      <!-- post button -->\n      <div class=\"form-group\">\n        <button type=\"submit\" class=\"form-control btn btn-success\">Post</button>\n      </div>\n    </form>\n  </div>\n</div>\n","export class Quotes {\n  //creating a constructor with required properties\n  showQuote: boolean;\n\n  constructor(\n    public upVote: number = 0,\n    public downVote: number = 0,\n    public userName: string,\n    public quoteTitle: string,\n    public quoteAuthor: string,\n    public quote: string,\n    public date: Date\n  ) {\n    this.showQuote = false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}